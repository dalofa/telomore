[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "telomore"
description = "Identify and extract telomeric sequences from Oxford Nanopore or Illumina sequencing reads to extend Streptomycetes assemblies."
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [{ name = "David Faurdal", email = "dalofa@biosustain.dtu.dk" }]

classifiers = [
    "Programming Language :: Python :: 3",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = ["biopython", "pysam", "gitpython"]

dynamic = ["version"]

# Optional dependencies for testing
[project.optional-dependencies]
dev = ["hatch", "isort", "numpydoc-validation", "pre-commit", "ruff"]

[project.urls]
documentation = "https://github.com/dalofa/telomore"
homepage = "https://github.com/dalofa/telomore"
repository = "https://github.com/dalofa/telomore"

[project.scripts]
telomore = "telomore.app:entrypoint"

[tool.hatch.build]
source = "src"
include = ["src/telomore/**/*.py", "src/telomore/bash_scripts/*.sh"]
exclude = ["environment.yml", ".github", ".vscode"]

[tool.hatch.build.targets.wheel]
packages = ["src/telomore"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.vcs]
tag-pattern = "v*"         # Git tags starting with 'v' will be used for versioning
fallback-version = "0.0.0"

[tool.hatch.build.hooks.vcs]
version-file = "src/telomore/_version.py"

[tool.pytest.ini_options]
addopts = "-v --cov=telomore --cov-branch --cov-report=xml --cov-report=term"
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    "C", # mccabe rules
    "F", # pyflakes rules
    "E", # pycodestyle error rules
    "W", # pycodestyle warning rules
    "B", # flake8-bugbear rules
    "I", # isort rules
]
ignore = [
    "C901", # max-complexity-10
    "E501", # line-too-long
    "I001", # isort-imports
    "B905", # `zip()` without an explicit `strict=` parameter
]

[tool.ruff.format]
indent-style = "space"
quote-style = "single"

[tool.isort]
profile = "black"
known_third_party = ["biopython", "pysam", "gitpython", "Bio"]
known_first_party = ["telomore"]
default_section = "THIRDPARTY"
force_sort_within_sections = true

[tool.numpydoc_validation]
checks = [
    "all",  # report on all checks
    "ES01", # but don't require an extended summary
    "EX01", # or examples
    "SA01", # or a see also section
    "SS06", # and don't require the summary to fit on one line
]
exclude = [ # don't report on checks for these
    '\.__init__$',
    '\.__repr__$',
    '\.__str__$',
]
override_SS05 = [ # allow docstrings to start with these words
    '^Process ',
    '^Assess ',
    '^Access ',
]
